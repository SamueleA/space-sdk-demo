[{"/home/piraya/repos/space-sdk-demo/src/index.js":"1","/home/piraya/repos/space-sdk-demo/src/reportWebVitals.js":"2","/home/piraya/repos/space-sdk-demo/src/App.js":"3","/home/piraya/repos/space-sdk-demo/src/views/index.js":"4","/home/piraya/repos/space-sdk-demo/src/views/Album/index.js":"5","/home/piraya/repos/space-sdk-demo/src/views/Signin/index.js":"6","/home/piraya/repos/space-sdk-demo/src/views/Signup/index.js":"7","/home/piraya/repos/space-sdk-demo/src/shared/components/AuthForm/index.js":"8","/home/piraya/repos/space-sdk-demo/src/config.js":"9"},{"size":500,"mtime":1611954757317,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1611954757317,"results":"12","hashOfConfig":"11"},{"size":534,"mtime":1612063782764,"results":"13","hashOfConfig":"11"},{"size":135,"mtime":1612063863905,"results":"14","hashOfConfig":"11"},{"size":130,"mtime":1612062199062,"results":"15","hashOfConfig":"11"},{"size":1105,"mtime":1612141121780,"results":"16","hashOfConfig":"11"},{"size":1348,"mtime":1612141127252,"results":"17","hashOfConfig":"11"},{"size":1105,"mtime":1612128941439,"results":"18","hashOfConfig":"11"},{"size":338,"mtime":1612133271660,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1vy17qz",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/home/piraya/repos/space-sdk-demo/src/index.js",[],["41","42"],"/home/piraya/repos/space-sdk-demo/src/reportWebVitals.js",[],"/home/piraya/repos/space-sdk-demo/src/App.js",[],"/home/piraya/repos/space-sdk-demo/src/views/index.js",[],"/home/piraya/repos/space-sdk-demo/src/views/Album/index.js",[],"/home/piraya/repos/space-sdk-demo/src/views/Signin/index.js",["43"],"import React, { useState } from 'react';\nimport { BrowserStorage, Users, VaultBackupType } from '@spacehq/sdk';\nimport AuthFom from '@shared/components/AuthForm';\nimport config from '@config';\n\nconst Signin = () => {\n  const [loading, setLoading] = useState(false);\n\n  const onSubmit = async (values) => {\n    const {\n      username,\n      password,\n    } = values;\n\n    setLoading(true);\n\n    try { \n      const users = await Users.withStorage(new BrowserStorage(), {\n        endpoint: config.authEndpoint,\n        vaultServiceConfig: {\n          serviceUrl: config.vault.serviceUrl,\n          saltSecret: config.vault.saltSecret,\n        },\n      });\n  \n      const backupType = VaultBackupType.Email;\n  \n      const recoveredUser = await users.recoverKeysByPassphrase(username, password, backupType);\n    } catch(e) {\n      console.error('Failed to sign in', e);\n    }\n    setLoading(false);\n  };\n\n  return (\n      <div>\n        SIGNIN\n        <AuthFom\n          onSubmit={onSubmit}\n          loading={loading}\n          setLoading={setLoading}\n        />\n      </div>\n    );\n};\n\nexport default Signin;","/home/piraya/repos/space-sdk-demo/src/views/Signup/index.js",[],"/home/piraya/repos/space-sdk-demo/src/shared/components/AuthForm/index.js",[],["44","45"],"/home/piraya/repos/space-sdk-demo/src/config.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":28,"column":13,"nodeType":"52","messageId":"53","endLine":28,"endColumn":26},{"ruleId":"46","replacedBy":"54"},{"ruleId":"48","replacedBy":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'recoveredUser' is assigned a value but never used.","Identifier","unusedVar",["56"],["57"],"no-global-assign","no-unsafe-negation"]